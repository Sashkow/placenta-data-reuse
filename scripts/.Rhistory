setwd("~/Science/Florian/placenta-data-reuse/scripts")
library(cowplot)
library(ggfortify)
library(beadarray)
library(arrayQualityMetrics)
library(sva)
source("pcaPlots.R")
studies <- read.table("../pdata/studies.tsv", header = TRUE, sep = "\t")
i=1
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
exl = which(pdata$Comment=="Suspicious" && pdata$Comment=="exclude")
exl = which(pdata$Comment=="Suspicious" || pdata$Comment=="exclude")
exl = which((pdata$Comment=="Suspicious") || (pdata$Comment=="exclude"))
exl = which((pdata$Comment=="Suspicious") || (pdata$Comment=="Exclude"))
pdata$Comment=="Exclude"
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
# General
studies <- read.table("../pdata/studies.tsv", header = TRUE, sep = "\t")
exclude = TRUE
# London
i=1
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
if (exclude) {
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
pdata <- pdata[-exl,]
idatfiles <- idatfiles[-exl]
}
raw.data <- readIdatFiles(idatfiles)
raw.data@phenoData = AnnotatedDataFrame(pdata)
N.data <- normaliseIllumina(channel(raw.data, "Green"), method="neqc", transform="none")
# Batch-effect removal
batch = as.factor(pData(N.data)$Sentrix_ID)
mod = model.matrix(~as.factor(Condition), data=pData(N.data))
#mod = model.matrix(~1, data=pData(N.data))
combat_edata = ComBat(dat=exprs(N.data), batch=batch, mod=mod, par.prior=TRUE, prior.plots=FALSE)
N.data.nobatch <- N.data
N.data.nobatch@assayData$exprs <- combat_edata
# Perform PCA and plot
pca = prcomp(t(exprs(N.data)))
pca.nobatch = prcomp(t(exprs(N.data.nobatch)))
pl <- pcaPlots(pca, pData(N.data), c("Condition", "Sentrix_ID"), studies[i,]$ID)
pl.nobatch <- pcaPlots(pca.nobatch, pData(N.data.nobatch), c("Condition", "Sentrix_ID"), studies[i,]$ID)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl.nobatch)
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report_Sentrix_ID",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_Sentrix_ID_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
# General
studies <- read.table("../pdata/studies.tsv", header = TRUE, sep = "\t")
exclude = FALSE
# London
i=1
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
if (exclude) {
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
pdata <- pdata[-exl,]
idatfiles <- idatfiles[-exl]
}
raw.data <- readIdatFiles(idatfiles)
raw.data@phenoData = AnnotatedDataFrame(pdata)
N.data <- normaliseIllumina(channel(raw.data, "Green"), method="neqc", transform="none")
# Batch-effect removal
batch = as.factor(pData(N.data)$Sentrix_ID)
mod = model.matrix(~as.factor(Condition), data=pData(N.data))
#mod = model.matrix(~1, data=pData(N.data))
combat_edata = ComBat(dat=exprs(N.data), batch=batch, mod=mod, par.prior=TRUE, prior.plots=FALSE)
N.data.nobatch <- N.data
N.data.nobatch@assayData$exprs <- combat_edata
# Perform PCA and plot
pca = prcomp(t(exprs(N.data)))
pca.nobatch = prcomp(t(exprs(N.data.nobatch)))
pl <- pcaPlots(pca, pData(N.data), c("Condition", "Sentrix_ID"), studies[i,]$ID)
pl.nobatch <- pcaPlots(pca.nobatch, pData(N.data.nobatch), c("Condition", "Sentrix_ID"), studies[i,]$ID)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl.nobatch)
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report_Sentrix_ID",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_Sentrix_ID_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
source("pcaPlots.R")
studies <- read.table("../pdata/studies.tsv", header = TRUE, sep = "\t")
exclude = FALSE
i=2
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
if (exclude) {
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
pdata <- pdata[-exl,]
idatfiles <- idatfiles[-exl]
}
View(pdata)
raw.data <- readIdatFiles(idatfiles)
View(pdata)
raw.data@phenoData = AnnotatedDataFrame(pdata)
N.data <- normaliseIllumina(channel(raw.data, "Green"), method="neqc", transform="none")
batch = as.factor(pData(N.data)$Sentrix_ID)
mod = model.matrix(~as.factor(Condition), data=pData(N.data))
View(mod)
combat_edata = ComBat(dat=exprs(N.data), batch=batch, mod=mod, par.prior=TRUE, prior.plots=FALSE)
N.data.nobatch <- N.data
N.data.nobatch@assayData$exprs <- combat_edata
ca = prcomp(t(exprs(N.data)))
pca.nobatch = prcomp(t(exprs(N.data.nobatch)))
pl <- pcaPlots(pca, pData(N.data), c("Condition", "Sentrix_ID"), studies[i,]$ID)
pl.nobatch <- pcaPlots(pca.nobatch, pData(N.data.nobatch), c("Condition", "Sentrix_ID"), studies[i,]$ID)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl.nobatch)
pca = prcomp(t(exprs(N.data)))
pca.nobatch = prcomp(t(exprs(N.data.nobatch)))
pl <- pcaPlots(pca, pData(N.data), c("Condition", "Sentrix_ID"), studies[i,]$ID)
pl.nobatch <- pcaPlots(pca.nobatch, pData(N.data.nobatch), c("Condition", "Sentrix_ID"), studies[i,]$ID)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.2, pl.nobatch)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.5, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.5, pl.nobatch)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.6, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.6, pl.nobatch)
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report_Sentrix_ID",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_Sentrix_ID_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
View(pdata)
i=2
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
if (exclude) {
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
pdata <- pdata[-exl,]
idatfiles <- idatfiles[-exl]
}
exclude = TRUE
# London=1, Oslo=2
i=2
path = paste("../raws/", studies[i,]$ID, sep="")
pdata = read.table(paste("../pdata/", studies[i,]$ID, "_pdata.tsv", sep=""), sep="\t", head=TRUE, stringsAsFactors = FALSE)
idatfiles = dir(path, pattern="idat", full.name=TRUE)
if (exclude) {
exl = which((pdata$Comment=="Suspicious") | (pdata$Comment=="Exclude"))
pdata <- pdata[-exl,]
idatfiles <- idatfiles[-exl]
}
raw.data <- readIdatFiles(idatfiles)
raw.data@phenoData = AnnotatedDataFrame(pdata)
N.data <- normaliseIllumina(channel(raw.data, "Green"), method="neqc", transform="none")
# Batch-effect removal
batch = as.factor(pData(N.data)$Sentrix_ID)
mod = model.matrix(~as.factor(Condition), data=pData(N.data))
#mod = model.matrix(~1, data=pData(N.data))
combat_edata = ComBat(dat=exprs(N.data), batch=batch, mod=mod, par.prior=TRUE, prior.plots=FALSE)
N.data.nobatch <- N.data
N.data.nobatch@assayData$exprs <- combat_edata
# Perform PCA and plot
pca = prcomp(t(exprs(N.data)))
pca.nobatch = prcomp(t(exprs(N.data.nobatch)))
pl <- pcaPlots(pca, pData(N.data), c("Condition", "Sentrix_ID"), studies[i,]$ID)
pl.nobatch <- pcaPlots(pca.nobatch, pData(N.data.nobatch), c("Condition", "Sentrix_ID"), studies[i,]$ID)
# Save plot for manual quality control
save_plot(paste("../plots/", studies[i,]$ID, "_PCA.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.6, pl)
save_plot(paste("../plots/", studies[i,]$ID, "_PCA_nobatch.pdf", sep=""),
base_height=4, base_aspect_ratio = 2.6, pl.nobatch)
# AQM
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Condition"))
arrayQualityMetrics(expressionset = N.data,
outdir = "../plots/Report_Sentrix_ID",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
arrayQualityMetrics(expressionset = N.data.nobatch,
outdir = "../plots/Report_Sentrix_ID_NoBatch",
force = TRUE,
do.logtransform = FALSE,
intgroup = c("Sentrix_ID"))
